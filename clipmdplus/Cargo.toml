[package]
### App clipmdplus
name = "clipmdplus"
version = "0.1.0"
authors = ["David G Horsman <david_horsman@hotmail.com>"]
# build = "build.rs"
# documentation = "https://docs.rs/clipmdplus"
edition = "2021"
exclude = [
    "target",
    "ignore",
    "CHANGELOG.md",
    "image.png",
    "Cargo.lock",
]
license = "MIT"
# license-file = "clipmdplus_license.txt"
keywords = ["clipboard", "copy", "cut", "paste", "clippings", "ETL", "Windows", "Linux"]
readme = "README.md"
# repository = ?

# version.workspace = true
# authors.workspace = true
# description.workspace = true
# documentation.workspace = true

default-run = "clipmdplus"

# Metadata used when generating an Android APK, for example.
# [package.metadata.android]
# package-name = "my-awesome-android-app"
# assets = "path/to/static"

[lib]
### library clipmdplus_liby
name = "clipmdplus_lib"
proc-macro = true

[[bin]]
### app bin clipmdplus
name = "clipmdplus"

# [build-dependencies]
# clipmdplus_macro.workspace = true

[dependencies]
### app dependencies
clipmdplus_macro = { workspace = true }
# clipmdplus_macro = {version = "0.1.0", workspace = true, path = "..\\clipmdplus_macro" }
clipmdplus_library = { workspace = true }
derive_more = { workspace = true }

blob = "0.3.0"
chrono = {version = "0.4.26", features = ["serde"]}
document-features = "0.2.7"
libc = "0.2.146"
postgres = "0.19.5"
# http / json
reqwest = {version = "0.11.18", features = ["json"]}

# Serialization
serde = {version = "1.0.164", features = ["derive", "rc"]}
serde-enum = "0.1.4" 
serde-enum-str = "0.3.2"
serde_json = "1.0.97"

# System
sled = "0.34.7"
# sys = "0.0.0"
thiserror = "1.0.40"
# async
lazy_static = "1.4.0"
tokio = { version = "1.28.2", features = ["full"] }

# UI start.
egui = { version = "0.22.0"} 
# , features = ["provide_any"] }
# enum_derive = "0" can't have payloads
eframe = "0.22.0"
# egui_web = "0.17.0"
# UI end.

# Proc Macro
# derive_more = "0.99.17"
# derive-name = "0.1.2"
proc-macro2 = "1.0.60"
syn = "2.0.18"
quote = "1.0.28"

# Windows:# OS
# The Xml Dom will be used too. 
# Not just Json.
# Formatting and transformation are first class
# although serialization is a requirement too.
[dependencies.windows]
version = "0.48.0"
# features = [
#     "Data_Xml_Dom",
#     "Win32_Foundation",
#     "Win32_Security",
#     "Win32_System_Threading",
#     "Win32_UI_WindowsAndMessaging",
# ]
[dependencies.windows-sys]
version = "0.48.0"
# features = [
#     "Win32_Foundation",
#     "Win32_Security",
#     "Win32_System_Threading",
#     "Win32_UI_WindowsAndMessaging",
# ]
#
[package.metadata.docs.rs]
features = ["document-features"]
# Alternative: enable all features so they are all documented
# all-features = true
#
# Development:
# [dev-dependencies]
# features = ["dev-dependencies"]

# [[example]]
# name = "deny_missing_docs"
# path = "examples/deny_missing_docs.rs"
# required-features = ["add_assign", "add", "as_mut", "as_ref", "constructor_derived", "deref", "deref_mut", "display", "from", "from_str", "index", "index_mut", "into", "mul_assign", "mul", "not", "try_into", "is_variant"]

# [[test]]
# name = "add_assign"
# path = "tests/add_assign.rs"
# required-features = ["add_assign"]
